version: "3.9"

services:
  backend:
    build:
      context: ./backend
    restart: always
    command: gunicorn backend.wsgi --bind 0.0.0.0:8000
    ports:
    - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGINS}
    depends_on:
      - db

  frontend:
    restart: on-failure
    build:
      context: ./frontend
    volumes:
      - react_build:/frontend/build
    env_file:
      - .env

  db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

  nginx:
    image: nginxinc/nginx-unprivileged:1.24-alpine
    build:
      context: ./backend/proxy
    restart: always
    depends_on:
      - app
      - web
    ports:
      - 80:8000
    volumes:
      - static_data:/vol/static


volumes:
  postgres-data:
  static_data:
  react_build:
