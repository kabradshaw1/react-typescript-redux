version: '3.9'

services:
  backend:
    build:
      context: ./backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn backend.wsgi --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
    volumes:
      - static-data:/backend/static

  frontend:
    build:
      context: ./frontend
    volumes:
      - react_build:/frontend/build

  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./seed.sql:/tmp/seed.sql

  nginx:
    image: nginx:1.21-alpine
    restart: on-failure
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/frontend
      - static-data:/var/www/backend
    depends_on:
      - backend
      - frontend

volumes:
  react_build:
  postgres-data:
  static-data: